========================================================================================================================================
							Problem statement 3
========================================================================================================================================
1) Write a C# Sharp program that sorts the array in reverse order without using inbuilt array API methods


using System;
public class Sort
{
    public static void Main()
    {
        int[] arr1 = new int[10];
        int n, i, j, tmp;


        Console.Write("\n\nSorting elements of an array in ascending order :\n");
        Console.Write("=====================================================\n");

        Console.Write("Input the size of an array : ");
        n = Convert.ToInt32(Console.ReadLine());

        Console.Write("Input {0} elements in the array :\n", n);
        for (i = 0; i < n; i++)
        {
            Console.Write("element - {0} : ", i);
            arr1[i] = Convert.ToInt32(Console.ReadLine());
        }

        for (i = 0; i < n; i++)
        {
            for (j = i + 1; j < n; j++)
            {
                if (arr1[j] < arr1[i])
                {
                    tmp = arr1[i];
                    arr1[i] = arr1[j];
                    arr1[j] = tmp;
                }
            }
        }
        Console.Write("\nElements of array in sorted ascending order:\n");
        for (i = 0; i < n; i++)
        {
            Console.Write("{0}  ", arr1[i]);
        }
        Console.Write("\n\n");
    }

}


o/p
Sorting elements of an array in ascending order :
================================================
Input the size of an array : 5
Input 5 elements in the array :
element - 0 : 5
element - 1 : 4
element - 2 : 3
element - 3 : 2
element - 4 : 1

Elements of array in sorted ascending order:
1  2  3  4  5

================================================================================================================================
2) Write  a  C#  Sharp  program that  searches  for  a  given  string  in  the  array  without  using  inbuilt  array  API methods


========================================================================================================================================
3) Write a program in C# Sharp to read n number of values in an array and display it in reverse order


using System;
public class Reverseorder
{
    public static void Main()
    {
        int i, n;
        int[] a = new int[100];

        Console.Write("\n\nRead n number of values in an array and display it in reverse order:\n");
        Console.Write("========================================================================\n");

        Console.Write("Input the number of elements to store in the array :");
        n = Convert.ToInt32(Console.ReadLine());


        Console.Write("Input {0} number of elements in the array :\n", n);
        for (i = 0; i < n; i++)
        {
            Console.Write("element - {0} : ", i);
            a[i] = Convert.ToInt32(Console.ReadLine());
        }

        Console.Write("\nThe values store into the array are : \n");
        for (i = 0; i < n; i++)
        {
            Console.Write("{0}  ", a[i]);
        }

        Console.Write("\n\nThe values store into the array in reverse are :\n");
        for (i = n - 1; i >= 0; i--)
        {
            Console.Write("{0} ", a[i]);
        }
        Console.Write("\n\n");
    }
}


o/p


Read n number of values in an array and display it in reverse order:
====================================================================
Input the number of elements to store in the array :5
Input 5 number of elements in the array :
element - 0 : 2
element - 1 : 4
element - 2 : 6
element - 3 : 8
element - 4 : 10

The values store into the array are :
2  4  6  8  10

The values store into the array in reverse are :
10 8 6 4 2
====================================================================================================================================
4) Write a program in C# Sharp to find the sum of all elements of the array

using System;
public class SumArray
{
    public static void Main()
    {
        int[] a = new int[100];
        int i, n, sum = 0;


        Console.Write("\n\nFind the sum of all elements of array:\n");
        Console.Write("===========================================\n");

        Console.Write("Input the number of elements to be stored in the array :");
        n = Convert.ToInt32(Console.ReadLine());

        Console.Write("Input {0} elements in the array :\n", n);
        for (i = 0; i < n; i++)
        {
            Console.Write("element - {0} : ", i);
            a[i] = Convert.ToInt32(Console.ReadLine());
        }

        for (i = 0; i < n; i++)
        {
            sum += a[i];
        }

        Console.Write("Sum of all elements stored in the array is : {0}\n\n", sum);
    }
}

o/p

Find the sum of all elements of array:
=====================================
Input the number of elements to be stored in the array :6
Input 6 elements in the array :
element - 0 : 12
element - 1 : 14
element - 2 : 3
element - 3 : 7
element - 4 : 6
element - 5 : 8
Sum of all elements stored in the array is : 50

===================================================================================================================================
5) Write a program in C# Sharp to count a total number of duplicate elements in an array

using System;
public class DuplicateArray
{
	public static void Main()
	{
		int[] arr1 = new int[100];
		int[] arr2 = new int[100];
		int[] arr3 = new int[100];
		int s1, s2, mm = 1, ctr = 0;
		int i, j;
		Console.Write("\n\nCount the total number of duplicate elements in an array:\n");
		Console.Write("=============================================================\n");

		Console.Write("Input the number of elements to be stored in the array :");
		s1 = Convert.ToInt32(Console.ReadLine());

		Console.Write("Input {0} elements in the array :\n", s1);
		for (i = 0; i < s1; i++)
		{
			Console.Write("element - {0} : ", i);
			arr1[i] = Convert.ToInt32(Console.ReadLine());
		}
		
		for (i = 0; i < s1; i++)
		{
			arr2[i] = arr1[i];
			arr3[i] = 0;
		}
		
		for (i = 0; i < s1; i++)
		{
			for (j = 0; j < s1; j++)
			{
				if (arr1[i] == arr2[j])
				{
					arr3[j] = mm;
					mm++;
				}
			}
			mm = 1;
		}
	
		for (i = 0; i < s1; i++)
		{
			if (arr3[i] == 2) { ctr++; }
		}
		Console.Write("The number of duplicate elements is: {0} \n", ctr);

		Console.Write("\n\n");
	}
}

o/p

Count the total number of duplicate elements in an array:
=========================================================
Input the number of elements to be stored in the array :7
Input 7 elements in the array :
element - 0 : 1
element - 1 : 2
element - 2 : 2
element - 3 : 3
element - 4 : 4
element - 5 : 5
element - 6 : 5
The number of duplicate elements is: 2

================================================================================================================================
6) Write a program in C# Sharp to print all unique elements in an array

using System;
public class UniqueElement
{
    public static void Main()
    {
        int n, ctr = 0;
        int[] arr1 = new int[100];
        int i, j, k;
        Console.Write("\n\nPrint all unique elements of an array:\n");
        Console.Write("===========================================\n");
        Console.Write("Input the number of elements to be stored in the array :");
        n = Convert.ToInt32(Console.ReadLine());
        Console.Write("Input {0} elements in the array :\n", n);
        for (i = 0; i < n; i++)
        {
            Console.Write("element - {0} : ", i);
            arr1[i] = Convert.ToInt32(Console.ReadLine());
        }
        
        Console.Write("\nThe unique elements found in the array are : \n");
        for (i = 0; i < n; i++)
        {
            ctr = 0;
            
            for (j = 0; j < i - 1; j++)
            {
                
                if (arr1[i] == arr1[j])
                {
                    ctr++;
                }
            }
            
            for (k = i + 1; k < n; k++)
            {
              
                if (arr1[i] == arr1[k])
                {
                    ctr++;
                }
               
                if (arr1[i] == arr1[i + 1])
                {
                    i++;
                }
            }
            
            if (ctr == 0)
            {
                Console.Write("{0} ", arr1[i]);
            }
        }
        Console.Write("\n\n");
    }
}

o/p

Print all unique elements of an array:
========================================
Input the number of elements to be stored in the array :7
Input 7 elements in the array :
element - 0 : 11
element - 1 : 2
element - 2 : 11
element - 3 : 33
element - 4 : 44
element - 5 : 55
element - 6 : 66

The unique elements found in the array are :
2 33 44 55 66

==============================================================================================================================
7) Write a program in C# Sharp to merge two arrays of same size

using System;
public class MergeArray
{
    public static void Main()
    {
        int[] arr1 = new int[100];
        int[] arr2 = new int[100];
        int[] arr3 = new int[200];
        int s1, s2, s3;
        int i, j, k;


        Console.Write("\n\nMerge two arrays of same size sorted in ascending order.\n");
        Console.Write("============================================================\n");

        Console.Write("Input the number of elements to be stored in the first array :");
        s1 = Convert.ToInt32(Console.ReadLine());

        Console.Write("Input {0} elements in the array :\n", s1);
        for (i = 0; i < s1; i++)
        {
            Console.Write("element - {0} : ", i);
            arr1[i] = Convert.ToInt32(Console.ReadLine());
        }


        Console.Write("Input the number of elements to be stored in the second array :");
        s2 = Convert.ToInt32(Console.ReadLine());

        Console.Write("Input {0} elements in the array :\n", s2);
        for (i = 0; i < s2; i++)
        {
            Console.Write("element - {0} : ", i);
            arr2[i] = Convert.ToInt32(Console.ReadLine());
        }

        
        s3 = s1 + s2;

        
        for (i = 0; i < s1; i++)
        {
            arr3[i] = arr1[i];
        }
        for (j = 0; j < s2; j++)
        {
            arr3[i] = arr2[j];
            i++;
        }
        
        for (i = 0; i < s3; i++)
        {
            for (k = 0; k < s3 - 1; k++)
            {

                if (arr3[k] >= arr3[k + 1])
                {
                    j = arr3[k + 1];
                    arr3[k + 1] = arr3[k];
                    arr3[k] = j;
                }
            }
        }
        
        Console.Write("\nThe merged array in ascending order is :\n");
        for (i = 0; i < s3; i++)
        {
            Console.Write("{0} ", arr3[i]);
        }
        Console.Write("\n\n");
    }
}

o/p

Merge two arrays of same size sorted in ascending order.
=========================================================
Input the number of elements to be stored in the first array :4
Input 4 elements in the array :
element - 0 : 11
element - 1 : 22
element - 2 : 33
element - 3 : 44
Input the number of elements to be stored in the second array :3
Input 3 elements in the array :
element - 0 : 55
element - 1 : 66
element - 2 : 77

The merged array in ascending order is :
11 22 33 44 55 66 77

======================================================================================================================
8) Write a program in C# Sharp to find maximum and minimum element in an array


using System;
public class MaxMinArray
{
    public static void Main()
    {
        int[] arr1 = new int[100];
        int i, mx, mn, n;


        Console.Write("\n\nFind the maximum and minimum element in an array :\n");
        Console.Write("========================================================\n");

        Console.Write("Input the number of elements to be stored in the array :");
        n = Convert.ToInt32(Console.ReadLine());

        Console.Write("Input {0} elements in the array :\n", n);
        for (i = 0; i < n; i++)
        {
            Console.Write("element - {0} : ", i);
            arr1[i] = Convert.ToInt32(Console.ReadLine());
        }


        mx = arr1[0];
        mn = arr1[0];

        for (i = 1; i < n; i++)
        {
            if (arr1[i] > mx)
            {
                mx = arr1[i];
            }


            if (arr1[i] < mn)
            {
                mn = arr1[i];
            }
        }
        Console.Write("Maximum element is : {0}\n", mx);
        Console.Write("Minimum element is : {0}\n\n", mn);
    }
}

o/p

Find the maximum and minimum element in an array :
========================================================
Input the number of elements to be stored in the array :4
Input 4 elements in the array :
element - 0 : 22
element - 1 : 44
element - 2 : 66
element - 3 : 88
Maximum element is : 88
Minimum element is : 22

=====================================================================================================================
9) Write a program in C# Sharp to separate odd and even integers in separate arrays

using System;
public class EvenOddArray
{
    public static void Main()
    {
        int[] arr1 = new int[10];
        int[] arr2 = new int[10];
        int[] arr3 = new int[10];
        int i, j = 0, k = 0, n;


        Console.Write("\n\nSeparate odd and even integers in separate arrays:\n");
        Console.Write("=======================================================\n");

        Console.Write("Input the number of elements to be stored in the array :");
        n = Convert.ToInt32(Console.ReadLine());

        Console.Write("Input {0} elements in the array :\n", n);
        for (i = 0; i < n; i++)
        {
            Console.Write("element - {0} : ", i);
            arr1[i] = Convert.ToInt32(Console.ReadLine());
        }

        for (i = 0; i < n; i++)
        {
            if (arr1[i] % 2 == 0)
            {
                arr2[j] = arr1[i];
                j++;
            }
            else
            {
                arr3[k] = arr1[i];
                k++;
            }
        }

        Console.Write("\nThe Even elements are : \n");
        for (i = 0; i < j; i++)
        {
            Console.Write("{0} ", arr2[i]);
        }

        Console.Write("\nThe Odd elements are :\n");
        for (i = 0; i < k; i++)
        {
            Console.Write("{0} ", arr3[i]);
        }
        Console.Write("\n\n");
    }
}

o/p

Separate odd and even integers in separate arrays:
=======================================================
Input the number of elements to be stored in the array :8
Input 8 elements in the array :
element - 0 : 1
element - 1 : 2
element - 2 : 3
element - 3 : 4
element - 4 : 5
element - 5 : 6
element - 6 : 7
element - 7 : 8

The Even elements are :
2 4 6 8
The Odd elements are :
1 3 5 7

==================================================================================================================================
10) Write a program in C# Sharp to delete an element at desired position from an array

using System;
public class DelPositionArray
{
    public static void Main()
    {
        int i, pos, n;
        int[] arr1 = new int[50];



        Console.Write("\n\nDelete an element at desired position from an array :\n");
        Console.Write("=========================================================\n");

        Console.Write("Input the size of array : ");
        n = Convert.ToInt32(Console.ReadLine());
        
        Console.Write("Input {0} elements in the array in ascending order:\n", n);
        for (i = 0; i < n; i++)
        {
            Console.Write("element - {0} : ", i);
            arr1[i] = Convert.ToInt32(Console.ReadLine());
        }

        Console.Write("\nInput the position where to delete: ");
        pos = Convert.ToInt32(Console.ReadLine());
        
        i = 0;
        while (i != pos - 1)
            i++;
        
        while (i < n)
        {
            arr1[i] = arr1[i + 1];
            i++;
        }
        n--;
        Console.Write("\nThe new list is : ");
        for (i = 0; i < n; i++)
        {
            Console.Write("  {0}", arr1[i]);
        }
        Console.Write("\n\n");

    }
}

o/p

Delete an element at desired position from an array :
=========================================================
Input the size of array : 6
Input 6 elements in the array in ascending order:
element - 0 : 1
element - 1 : 2
element - 2 : 3
element - 3 : 4
element - 4 : 5
element - 5 : 6

Input the position where to delete: 4

The new list is :   1  2  3  5  6

============================================================================================================================
11) Write a program in C# Sharp to find the second largest element in an array

using System;
public class SecondLargest
{
    public static void Main()
    {
        int n, i, j = 0, large, large2nd;
        int[] arr1 = new int[50];

        Console.Write("\n\nFind the second largest element in an array :\n");
        Console.Write("==================================================\n");

        Console.Write("Input the size of array : ");
        n = Convert.ToInt32(Console.ReadLine());
        
        Console.Write("Input {0} elements in the array :\n", n);
        for (i = 0; i < n; i++)
        {
            Console.Write("element - {0} : ", i);
            arr1[i] = Convert.ToInt32(Console.ReadLine());
        }
        
        large = 0;

        for (i = 0; i < n; i++)
        {
            if (large < arr1[i])
            {
                large = arr1[i];
                j = i;
            }
        }
        
        large2nd = 0;
        for (i = 0; i < n; i++)
        {
            if (i == j)
            {
                i++;  
                i--;
            }
            else
            {
                if (large2nd < arr1[i])
                {
                    large2nd = arr1[i];
                }
            }
        }

        Console.Write("The Second largest element in the array is :  {0} \n\n", large2nd);
    }
}

o/p

Find the second largest element in an array :
==================================================
Input the size of array : 6
Input 6 elements in the array :
element - 0 : 1
element - 1 : 2
element - 2 : 3
element - 3 : 4
element - 4 : 5
element - 5 : 6
The Second largest element in the array is :  5

==============================================================================================================================
12) Write a program in C# Sharp to find the second smallest element in an array

using System;
public class SecondSmallest
{
    public static void Main()
    {
        int n, i, j = 0, small, small2nd;
        int[] arr1 = new int[50];

        Console.Write("\n\nFind the second smallest element in an array :\n");
        Console.Write("===================================================\n");

        Console.Write("Input the size of array : ");
        n = Convert.ToInt32(Console.ReadLine());
        
        Console.Write("Input {0} elements in the array (value must be <9999):\n", n);
        for (i = 0; i < n; i++)
        {
            Console.Write("element - {0} : ", i);
            arr1[i] = Convert.ToInt32(Console.ReadLine());
        }
        
        small = 0;
        for (i = 0; i < n; i++)
        {
            if (small > arr1[i])
            {
                small = arr1[i];
                j = i;
            }
        }

        
        small2nd = 99999;
        for (i = 0; i < n; i++)
        {
            if (i == j)
            {
                i++;  
                i--;
            }
            else
            {
                if (small2nd > arr1[i])
                {
                    small2nd = arr1[i];
                }
            }
        }

        Console.Write("The Second smallest element in the array is :  {0} \n\n", small2nd);
    }
}

o/p

Find the second smallest element in an array :
===================================================
Input the size of array : 6
Input 6 elements in the array (value must be <9999):
element - 0 : 1
element - 1 : 2
element - 2 : 3
element - 3 : 4
element - 4 : 5
element - 5 : 6
The Second smallest element in the array is :  2

===========================================================================================================================
13) Write a program in C# Sharp for a 2D array of size 3x3 and print the matrix

using System;
public class Matrix
{
    public static void Main()
    {
        int i, j;
        int[,] arr1 = new int[3, 3];

        Console.Write("\n\nRead a 2D array of size 3x3 and print the matrix :\n");
        Console.Write("=======================================================\n");


       
        Console.Write("Input elements in the matrix :\n");
        for (i = 0; i < 3; i++)
        {
            for (j = 0; j < 3; j++)
            {
                Console.Write("element - [{0},{1}] : ", i, j);
                arr1[i, j] = Convert.ToInt32(Console.ReadLine());
            }
        }

        Console.Write("\nThe matrix is : \n");
        for (i = 0; i < 3; i++)
        {
            Console.Write("\n");
            for (j = 0; j < 3; j++)
                Console.Write("{0}\t", arr1[i, j]);
        }
        Console.Write("\n\n");
    }
}

o/p


Read a 2D array of size 3x3 and print the matrix :
=======================================================
Input elements in the matrix :
element - [0,0] : 11
element - [0,1] : 2
element - [0,2] : 33
element - [1,0] : 4
element - [1,1] : 55
element - [1,2] : 6
element - [2,0] : 77
element - [2,1] : 8
element - [2,2] : 99

The matrix is :

11      2       33
4       55      6
77      8       99

=========================================================================================================================
14) Write a C# Sharp program to remove all duplicate elements from a given array and returns a new array

using System;

    class Duplicate
    {
        static void Main(string[] args)
        {
            object[] mixedArray = new object[8];
            mixedArray[0] = "Godwin";
            mixedArray[1] = true;
            mixedArray[2] = 22;
            mixedArray[3] = System.DateTime.Now;
            mixedArray[4] = "Godwin";
            mixedArray[5] = true;
            
            Console.WriteLine("Original array elements:");
            for (int i = 0; i < mixedArray.Length; i++)
            {
                Console.WriteLine(mixedArray[i]);
            }
            object[] result = test(mixedArray);
            Console.WriteLine("\nAfter removing duplicate elements from the said array:");
            for (int i = 0; i < result.Length; i++)
            {
                Console.WriteLine(result[i]);
            }

        }
        public static object[] test(object[] mixedArray)
        {
            return mixedArray.Distinct().ToArray();
        }
    }

o/p

Original array elements:
Godwin
True
22
18-06-2022 17:50:51
Godwin
True



After removing duplicate elements from the said array:
Godwin
True
22
18-06-2022 17:50:51

=================================================================================================================
15) Write a C# Sharp program to sort a list of elements using Shell sort

using System;

    public class SortingShell
    {
        static void Main(string[] args)
        {
            int[] arr = new int[] { 6, -3, 12, 0, 18, 22, 67, 51, 3 };
            int n;

            n = arr.Length;
            Console.WriteLine("Original Array Elements :");
            show_array_elements(arr);
            shellSort(arr, n);
            Console.WriteLine("\nSorted Array Elements :");
            show_array_elements(arr);
        }

        static void shellSort(int[] arr, int array_size)
        {
            int i, j, inc, temp;
            inc = 3;
            while (inc > 0)
            {
                for (i = 0; i < array_size; i++)
                {
                    j = i;
                    temp = arr[i];
                    while ((j >= inc) && (arr[j - inc] > temp))
                    {
                        arr[j] = arr[j - inc];
                        j = j - inc;
                    }
                    arr[j] = temp;
                }
                if (inc / 2 != 0)
                    inc = inc / 2;
                else if (inc == 1)
                    inc = 0;
                else
                    inc = 1;
            }
        }

        static void show_array_elements(int[] arr)
        {
            foreach (var element in arr)
            {
                Console.Write(element + " ");
            }
            Console.Write("\n");

        }
    }

o/p

Original Array Elements :
6 -3 12 0 18 22 67 51 3

Sorted Array Elements :
-3 0 3 6 12 18 22 51 67

===========================================================================================================================
16) Write a C# Sharp program to sort a list of elements using Bubble sort

using System;
public class BubbleSort
{
    public static void Main(string[] args)
    {
        int[] a = { 4, 0, 2, 5, -1, 3, 1 };
        int t;
        Console.WriteLine("Original array :");
        foreach (int aa in a)
            Console.Write(aa + " ");
        for (int p = 0; p <= a.Length - 2; p++)
        {
            for (int i = 0; i <= a.Length - 2; i++)
            {
                if (a[i] > a[i + 1])
                {
                    t = a[i + 1];
                    a[i + 1] = a[i];
                    a[i] = t;
                }
            }
        }
        Console.WriteLine("\n" + "Sorted array :");
        foreach (int aa in a)
            Console.Write(aa + " ");
        Console.Write("\n");

    }
}

o/p

Original array :
4 0 2 5 -1 3 1
Sorted array :
-1 0 1 2 3 4 5

===================================================================================================================================
17) Write a C# Sharp program to sort a list of elements using Heap sort


using System;
	public class HeapSorting
	{
		public static void Main(string[] args)
		{
			int[] mykeys = new int[] { 2, 4, -3, 8, 10, 0, 12, 22, 68, 52, 6 };

			

			Console.WriteLine("\nOriginal Array Elements :");
			printArray(mykeys);

			heapSort(mykeys);

			Console.WriteLine("\n\nSorted Array Elements :");
			printArray(mykeys);
			Console.WriteLine("\n");
		}

		private static void heapSort<T>(T[] array) where T : IComparable<T>
		{
			int heapSize = array.Length;

			buildMaxHeap(array);

			for (int i = heapSize - 1; i >= 1; i--)
			{
				swap(array, i, 0);
				heapSize--;
				sink(array, heapSize, 0);
			}
		}

		private static void buildMaxHeap<T>(T[] array) where T : IComparable<T>
		{
			int heapSize = array.Length;

			for (int i = (heapSize / 2) - 1; i >= 0; i--)
			{
				sink(array, heapSize, i);
			}
		}

		private static void sink<T>(T[] array, int heapSize, int toSinkPos) where T : IComparable<T>
		{
			if (getLeftKidPos(toSinkPos) >= heapSize)
			{
								return;
			}


			int largestKidPos;
			bool leftIsLargest;

			if (getRightKidPos(toSinkPos) >= heapSize || array[getRightKidPos(toSinkPos)].CompareTo(array[getLeftKidPos(toSinkPos)]) < 0)
			{
				largestKidPos = getLeftKidPos(toSinkPos);
				leftIsLargest = true;
			}
			else
			{
				largestKidPos = getRightKidPos(toSinkPos);
				leftIsLargest = false;
			}



			if (array[largestKidPos].CompareTo(array[toSinkPos]) > 0)
			{
				swap(array, toSinkPos, largestKidPos);

				if (leftIsLargest)
				{
					sink(array, heapSize, getLeftKidPos(toSinkPos));

				}
				else
				{
					sink(array, heapSize, getRightKidPos(toSinkPos));
				}
			}

		}

		private static void swap<T>(T[] array, int pos0, int pos1)
		{
			T tmpVal = array[pos0];
			array[pos0] = array[pos1];
			array[pos1] = tmpVal;
		}

		private static int getLeftKidPos(int parentPos)
		{
			return (2 * (parentPos + 1)) - 1;
		}

		private static int getRightKidPos(int parentPos)
		{
			return 2 * (parentPos + 1);
		}

		private static void printArray<T>(T[] array)
		{

			foreach (T t in array)
			{
				Console.Write(' ' + t.ToString() + ' ');
			}

		}
	}

o/p


Original Array Elements :
 2  4  -3  8  10  0  12  22  68  52  6

Sorted Array Elements :
 -3  0  2  4  6  8  10  12  22  52  68

===========================================================================================================================
18) Write a C# Sharp program to sort a list of elements using Merge sort

using System;
 class Mergesort
    {
        static void Main(string[] args)
        {
            List<int> unsorted = new List<int>();
            List<int> sorted;

            Random random = new Random();

            Console.WriteLine("Original array elements:");
            for (int i = 0; i < 10; i++)
            {
                unsorted.Add(random.Next(0, 100));
                Console.Write(unsorted[i] + " ");
            }
            Console.WriteLine();

            sorted = MergeSort(unsorted);

            Console.WriteLine("Sorted array elements: ");
            foreach (int x in sorted)
            {
                Console.Write(x + " ");
            }
            Console.Write("\n");
        }


        private static List<int> MergeSort(List<int> unsorted)
        {
            if (unsorted.Count <= 1)
                return unsorted;

            List<int> left = new List<int>();
            List<int> right = new List<int>();

            int middle = unsorted.Count / 2;
            for (int i = 0; i < middle; i++)  
            {
                left.Add(unsorted[i]);
            }
            for (int i = middle; i < unsorted.Count; i++)
            {
                right.Add(unsorted[i]);
            }

            left = MergeSort(left);
            right = MergeSort(right);
            return Merge(left, right);
        }

        private static List<int> Merge(List<int> left, List<int> right)
        {
            List<int> result = new List<int>();

            while (left.Count > 0 || right.Count > 0)
            {
                if (left.Count > 0 && right.Count > 0)
                {
                    if (left.First() <= right.First())  
                    {
                        result.Add(left.First());
                        left.Remove(left.First());      
                    }
                    else
                    {
                        result.Add(right.First());
                        right.Remove(right.First());
                    }
                }
                else if (left.Count > 0)
                {
                    result.Add(left.First());
                    left.Remove(left.First());
                }
                else if (right.Count > 0)
                {
                    result.Add(right.First());

                    right.Remove(right.First());
                }
            }
            return result;
        }
    }

o/p

Original array elements:
30 67 58 89 25 92 45 43 23 2
Sorted array elements:
2 23 25 30 43 45 58 67 89 92

===================================================================================================================================
19) Write a program to convert a 2D Array into 1D Array


using System;
   class twodmatrix
    {
        int m, n;
        int[,] a;
        int[] b;
        twodmatrix(int x, int y)
        {
            m = x;
            n = y;
            a = new int[m, n];
            b = new int[m * n];
        }
        public void readmatrix()
        {
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.WriteLine("a[{0},{1}]=", i, j);
                    a[i, j] = Convert.ToInt32(Console.ReadLine());
                }
            }
        }
        public void printd()
        {
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write("{0}\t", a[i, j]);

                }
                Console.Write("\n");
            }
        }
        public void convert()
        {
            int k = 0;
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    b[k++] = a[i, j];
                }
            }
        }
        public void printoned()
        {
            for (int i = 0; i < m * n; i++)
            {
                Console.WriteLine("{0}\t", b[i]);
            }
        }


        public static void Main(string[] args)
        {
            twodmatrix obj = new twodmatrix(2, 3);
            Console.WriteLine("Enter the Elements : ");
            obj.readmatrix();
            Console.WriteLine("\t\t Given 2-D Array(Matrix) is : ");
            obj.printd();
            obj.convert();
            Console.WriteLine("\t\t Converted 1-D Array is : ");
            obj.printoned();
            Console.ReadLine();
        }
    }

o/p

Enter the Elements :
a[0,0]=
2
a[0,1]=
6
a[0,2]=
0
a[1,0]=
8
a[1,1]=
32
a[1,2]=
22
                 Given 2-D Array(Matrix) is :
2       6       0
8       32      22
                 Converted 1-D Array is :
2
6
0
8
32
22

========================================================================================================================


